unit orm.conexao.model_zeos.ModelZeosQuery;

interface

  type
    TModelZeosQuery = class(TInterfacedObject, IModelQuery)
      private
        FQuery: TZQuery;
        FConexao: IModelConexao;
      public
        constructor Create(aValue: IModelConexao);
        destructor Destroy; override;
        class function New(aValue: IModelConexao): IModelQuery;
    end;

implementation

{ TModelZeosQuery }

constructor TModelZeosQuery.Create(aValue: IModelConexao);
begin
  FConexao := aValue;
  FQuery := TZQuery.Create(nil);
  FQuery.Connection := TZConnection(FConexao.Connection);
end;

destructor TModelZeosQuery.Destroy;
begin
  FreeAndNil(FQuery);
  inherited;
end;

class function TModelZeosQuery.New(aValue: IModelConexao): IModelQuery;
begin
  Result := Self.Create(aValue);
end;

end.
